[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio project",
    "section": "",
    "text": "TL;DR You can find the project code on github\nThis is Lei’s work-in-progress portfolio project, illustrating a realistic data pipeline implemented from extracting electronic medical records (EMR), various medical vocabularies, loading onto a database and conducting transformation using dbt, while the workflow is orchestrated, scheduled and monitored using Apache airflow.\nThe pipeline process is documented using diagram as code tool Diagrams\nCode\nfrom diagrams import Diagram, Cluster\nfrom diagrams.onprem.analytics import Dbt\nfrom diagrams.onprem.database import Postgresql\nfrom diagrams.onprem.workflow import Airflow\nfrom diagrams.generic.storage import Storage\n\nwith Diagram(\"Synthea OMOP CDM ELT Workflow\", show=False) as diag:\n\n    with Cluster(\"Orchestration & Scheduler\"):    \n        Airflow('Apache Airflow')     \n\n    with Cluster(\"Data Pipeline\"):\n        [Storage(\"Synthea \"), Storage(\"Athena Vocab\")] &gt;&gt; Postgresql(\"Postgres\") &gt;&gt; Dbt(\"dbt\") \n\n    \ndiag"
  },
  {
    "objectID": "index.html#extraction-process",
    "href": "index.html#extraction-process",
    "title": "Portfolio project",
    "section": "Extraction process",
    "text": "Extraction process\nOpen sourced Synthea project provides the capability of generating realistic synthetic EMR data, and downloadable data in various formats. The csv files has been used in this project.\nAthena is one of the open sourced tools provided by OHDSI – Observational Health Data Sciences and Informatics, greatly simplied the process of converting various medical codes to standard codes. For this project, I downloaded a subset of the codes listed on the website."
  },
  {
    "objectID": "index.html#loading-process",
    "href": "index.html#loading-process",
    "title": "Portfolio project",
    "section": "Loading process",
    "text": "Loading process\nAt the moment, the csv files from both Synthea and Athena were put in the dbt seeds folder. A better approach is to load the large csv files directly to the database, only store small crosswalks csv in seeds folder."
  },
  {
    "objectID": "index.html#transformation-process",
    "href": "index.html#transformation-process",
    "title": "Portfolio project",
    "section": "Transformation process",
    "text": "Transformation process\ndbt were used for the whole transformation process. It is currently the stands for the T step in ETL/ELT process.\nThe sql codes were adopted from ETL-Synthea-dbt which in turn were adopted from OHDSI tool OHDSI/ETL-Synthea.\nThis process is complex in nature. To have a good understanding, I went over following resources:\n\nThe Book of OHDSI\nOHDSI - YouTube\nData Standardization – OHDSI"
  },
  {
    "objectID": "index.html#orchestration-and-scheduling",
    "href": "index.html#orchestration-and-scheduling",
    "title": "Portfolio project",
    "section": "Orchestration and scheduling",
    "text": "Orchestration and scheduling\nApache Airflow is the current standard tool for complex workflow orchestration. Although Airflow and dbt share some similarities, dbt is for transformation step, Airflow is the job scheduler for the whole project. It is difficult to grasp such one tool, let alone make both tools work together. Thanks to Cosmos by Astronomer, now it is much easier to setup and make Airflow and dbt work together more harmoniously.\nPreviously, the common way to use both tools, is just run a airflow bashoperator for dbt. It not ideal, since it is difficult to see the DAG inside dbt. Now with Cosmo, one can monitor the whole process including the dbt DAG inside Airflow, as the screenshot for this project shown below."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is Lei’s personal website powered by Quarto and github page."
  }
]